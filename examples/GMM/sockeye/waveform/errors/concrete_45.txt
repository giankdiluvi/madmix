Traceback (most recent call last):
  File "gmm_run_concrete_waveform.py", line 106, in <module>
    tmp_flow,tmp_loss=trainGMMRealNVP(
  File "/arc/project/st-tdjc-1/madmix/examples/gmm/waveform/concrete.py", line 721, in trainGMMRealNVP
    loss = -flow.log_prob(sample).mean()
  File "/arc/project/st-tdjc-1/madmix/examples/gmm/waveform/concrete.py", line 406, in log_prob
    return self.prior.log_prob(z) + logp
  File "/arc/project/st-tdjc-1/madmix/examples/gmm/waveform/concrete.py", line 552, in log_prob
    for n in range(self.N): relcat_lp += self.relcat.log_prob(value[...,n*self.K+torch.arange(0,self.K)])
  File "/arc/project/st-tdjc-1/madmix/examples/gmm/waveform/concrete.py", line 353, in log_prob
    self._validate_sample(value)
  File "/home/giank/.local/lib/python3.8/site-packages/torch/distributions/distribution.py", line 300, in _validate_sample
    raise ValueError(
ValueError: Expected value argument (Tensor of shape (1000, 3)) to be within the support (IndependentConstraint(Real(), 1)) of the distribution ExpRelaxedCategorical(), but found invalid values:
tensor([[nan, nan, nan],
        [nan, nan, nan],
        [nan, nan, nan],
        ...,
        [nan, nan, nan],
        [nan, nan, nan],
        [nan, nan, nan]], grad_fn=<IndexBackward0>)
