Traceback (most recent call last):
  File "gmm_run_dequant_waveform.py", line 97, in <module>
    tmp_flow,tmp_loss=dequantization.train_dequant_gmm(
  File "/arc/project/st-tdjc-1/madmix/examples/gmm/dequantization/waveform/dequantization.py", line 280, in train_dequant_gmm
    loss = -flow.log_prob(sample).mean()
  File "/arc/project/st-tdjc-1/madmix/examples/gmm/dequantization/waveform/concrete.py", line 406, in log_prob
    return self.prior.log_prob(z) + logp
  File "/arc/project/st-tdjc-1/madmix/examples/gmm/dequantization/waveform/dequantization.py", line 141, in log_prob
    xc_lp += self.invwis.log_prob(torch.moveaxis(Sigmas[k,...],2,0))
  File "/home/giank/.local/lib/python3.8/site-packages/torch/distributions/wishart.py", line 271, in log_prob
    self._validate_sample(value)
  File "/home/giank/.local/lib/python3.8/site-packages/torch/distributions/distribution.py", line 300, in _validate_sample
    raise ValueError(
ValueError: Expected value argument (Tensor of shape (1000, 2, 2)) to be within the support (PositiveDefinite()) of the distribution Wishart(covariance_matrix: torch.Size([2, 2]), df: 100.0), but found invalid values:
tensor([[[ 1.8618e+32,  6.3544e+18],
         [ 6.3544e+18,  2.1688e+05]],

        [[        inf,         nan],
         [        nan,         inf]],

        [[        inf,  1.0004e+27],
         [ 1.0004e+27,         inf]],

        ...,

        [[ 2.2297e+04, -1.4258e+02],
         [-1.4258e+02,  9.1172e-01]],

        [[ 2.0018e+03,  8.5830e+02],
         [ 8.5830e+02,  3.6800e+02]],

        [[ 2.0233e-02,  1.4851e+00],
         [ 1.4851e+00,  1.0902e+02]]], grad_fn=<PermuteBackward0>)
