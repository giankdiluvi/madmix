Traceback (most recent call last):
  File "gmm_run_dequant_waveform.py", line 97, in <module>
    tmp_flow,tmp_loss=dequantization.train_dequant_gmm(
  File "/arc/project/st-tdjc-1/madmix/examples/gmm/dequantization/waveform/dequantization.py", line 280, in train_dequant_gmm
    loss = -flow.log_prob(sample).mean()
  File "/arc/project/st-tdjc-1/madmix/examples/gmm/dequantization/waveform/concrete.py", line 406, in log_prob
    return self.prior.log_prob(z) + logp
  File "/arc/project/st-tdjc-1/madmix/examples/gmm/dequantization/waveform/dequantization.py", line 141, in log_prob
    xc_lp += self.invwis.log_prob(torch.moveaxis(Sigmas[k,...],2,0))
  File "/home/giank/.local/lib/python3.8/site-packages/torch/distributions/wishart.py", line 271, in log_prob
    self._validate_sample(value)
  File "/home/giank/.local/lib/python3.8/site-packages/torch/distributions/distribution.py", line 300, in _validate_sample
    raise ValueError(
ValueError: Expected value argument (Tensor of shape (1000, 2, 2)) to be within the support (PositiveDefinite()) of the distribution Wishart(covariance_matrix: torch.Size([2, 2]), df: 100.0), but found invalid values:
tensor([[[ 1.9607e-17, -3.7886e-09],
         [-3.7886e-09,  7.3206e-01]],

        [[        inf, -7.9580e+21],
         [-7.9580e+21,         inf]],

        [[ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  1.6423e+02]],

        ...,

        [[ 3.1272e-02, -3.2277e-01],
         [-3.2277e-01,  3.3315e+00]],

        [[ 0.0000e+00, -3.3155e-32],
         [-3.3155e-32,  1.4452e+01]],

        [[ 5.5614e-20, -6.4881e-10],
         [-6.4881e-10,  9.2942e+17]]], grad_fn=<PermuteBackward0>)
