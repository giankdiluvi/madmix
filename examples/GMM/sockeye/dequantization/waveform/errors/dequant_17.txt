Traceback (most recent call last):
  File "gmm_run_dequant_waveform.py", line 97, in <module>
    tmp_flow,tmp_loss=dequantization.train_dequant_gmm(
  File "/arc/project/st-tdjc-1/madmix/examples/gmm/dequantization/waveform/dequantization.py", line 280, in train_dequant_gmm
    loss = -flow.log_prob(sample).mean()
  File "/arc/project/st-tdjc-1/madmix/examples/gmm/dequantization/waveform/concrete.py", line 406, in log_prob
    return self.prior.log_prob(z) + logp
  File "/arc/project/st-tdjc-1/madmix/examples/gmm/dequantization/waveform/dequantization.py", line 141, in log_prob
    xc_lp += self.invwis.log_prob(torch.moveaxis(Sigmas[k,...],2,0))
  File "/home/giank/.local/lib/python3.8/site-packages/torch/distributions/wishart.py", line 271, in log_prob
    self._validate_sample(value)
  File "/home/giank/.local/lib/python3.8/site-packages/torch/distributions/distribution.py", line 300, in _validate_sample
    raise ValueError(
ValueError: Expected value argument (Tensor of shape (1000, 2, 2)) to be within the support (PositiveDefinite()) of the distribution Wishart(covariance_matrix: torch.Size([2, 2]), df: 100.0), but found invalid values:
tensor([[[ 7.2306e+16, -1.6716e+08],
         [-1.6716e+08,  1.2848e+12]],

        [[ 8.5430e+28, -3.4594e+14],
         [-3.4594e+14,  3.1871e+11]],

        [[ 1.2894e+19,         nan],
         [        nan,         inf]],

        ...,

        [[ 1.4308e+10, -1.1705e+05],
         [-1.1705e+05,  2.8553e+07]],

        [[ 4.2298e+21, -1.1361e+11],
         [-1.1361e+11,         inf]],

        [[ 3.8854e+09,         nan],
         [        nan,         inf]]], grad_fn=<PermuteBackward0>)
