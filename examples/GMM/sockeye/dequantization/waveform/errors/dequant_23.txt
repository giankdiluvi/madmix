Traceback (most recent call last):
  File "gmm_run_dequant_waveform.py", line 97, in <module>
    tmp_flow,tmp_loss=dequantization.train_dequant_gmm(
  File "/arc/project/st-tdjc-1/madmix/examples/gmm/dequantization/waveform/dequantization.py", line 280, in train_dequant_gmm
    loss = -flow.log_prob(sample).mean()
  File "/arc/project/st-tdjc-1/madmix/examples/gmm/dequantization/waveform/concrete.py", line 406, in log_prob
    return self.prior.log_prob(z) + logp
  File "/arc/project/st-tdjc-1/madmix/examples/gmm/dequantization/waveform/dequantization.py", line 141, in log_prob
    xc_lp += self.invwis.log_prob(torch.moveaxis(Sigmas[k,...],2,0))
  File "/home/giank/.local/lib/python3.8/site-packages/torch/distributions/wishart.py", line 271, in log_prob
    self._validate_sample(value)
  File "/home/giank/.local/lib/python3.8/site-packages/torch/distributions/distribution.py", line 300, in _validate_sample
    raise ValueError(
ValueError: Expected value argument (Tensor of shape (1000, 2, 2)) to be within the support (PositiveDefinite()) of the distribution Wishart(covariance_matrix: torch.Size([2, 2]), df: 100.0), but found invalid values:
tensor([[[1.7912e+37, 2.2646e+18],
         [2.2646e+18, 8.4823e+03]],

        [[1.9835e+25, 2.5448e+12],
         [2.5448e+12, 1.7187e+03]],

        [[8.7608e+23, 2.9956e+11],
         [2.9956e+11, 1.7217e+04]],

        ...,

        [[2.7870e+23, 4.8035e+11],
         [4.8035e+11, 4.7877e+03]],

        [[       inf, 5.0970e+20],
         [5.0970e+20, 8.3366e+02]],

        [[1.1289e+21, 2.0289e+10],
         [2.0289e+10, 1.9669e+03]]], grad_fn=<PermuteBackward0>)
