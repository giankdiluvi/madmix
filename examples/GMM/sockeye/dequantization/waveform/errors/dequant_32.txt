Traceback (most recent call last):
  File "gmm_run_dequant_waveform.py", line 97, in <module>
    tmp_flow,tmp_loss=dequantization.train_dequant_gmm(
  File "/arc/project/st-tdjc-1/madmix/examples/gmm/dequantization/waveform/dequantization.py", line 280, in train_dequant_gmm
    loss = -flow.log_prob(sample).mean()
  File "/arc/project/st-tdjc-1/madmix/examples/gmm/dequantization/waveform/concrete.py", line 406, in log_prob
    return self.prior.log_prob(z) + logp
  File "/arc/project/st-tdjc-1/madmix/examples/gmm/dequantization/waveform/dequantization.py", line 141, in log_prob
    xc_lp += self.invwis.log_prob(torch.moveaxis(Sigmas[k,...],2,0))
  File "/home/giank/.local/lib/python3.8/site-packages/torch/distributions/wishart.py", line 271, in log_prob
    self._validate_sample(value)
  File "/home/giank/.local/lib/python3.8/site-packages/torch/distributions/distribution.py", line 300, in _validate_sample
    raise ValueError(
ValueError: Expected value argument (Tensor of shape (1000, 2, 2)) to be within the support (PositiveDefinite()) of the distribution Wishart(covariance_matrix: torch.Size([2, 2]), df: 100.0), but found invalid values:
tensor([[[ 5.0823e+02,  4.6225e+02],
         [ 4.6225e+02,  4.2042e+02]],

        [[ 0.0000e+00,         nan],
         [        nan,         inf]],

        [[        inf,         inf],
         [        inf,  1.4948e+02]],

        ...,

        [[ 3.4167e+03, -3.6314e+02],
         [-3.6314e+02,  3.8595e+01]],

        [[ 1.2040e+15,  3.5966e+08],
         [ 3.5966e+08,  1.0744e+02]],

        [[ 2.2587e+13,  6.2028e+07],
         [ 6.2028e+07,  1.7034e+02]]], grad_fn=<PermuteBackward0>)
