Traceback (most recent call last):
  File "gmm_run_concrete_waveform.py", line 106, in <module>
    tmp_flow,tmp_loss=trainGMMRealNVP(
  File "/arc/project/st-tdjc-1/madmix/examples/gmm/waveform/../../../src/concrete.py", line 704, in trainGMMRealNVP
    loss = -flow.log_prob(sample).mean()
  File "/arc/project/st-tdjc-1/madmix/examples/gmm/waveform/../../../src/concrete.py", line 406, in log_prob
    return self.prior.log_prob(z) + logp
  File "/arc/project/st-tdjc-1/madmix/examples/gmm/waveform/../../../src/concrete.py", line 558, in log_prob
    xc_lp += self.invwis.log_prob(torch.moveaxis(Sigmas[k,...],2,0))
  File "/home/giank/.local/lib/python3.8/site-packages/torch/distributions/wishart.py", line 271, in log_prob
    self._validate_sample(value)
  File "/home/giank/.local/lib/python3.8/site-packages/torch/distributions/distribution.py", line 300, in _validate_sample
    raise ValueError(
ValueError: Expected value argument (Tensor of shape (1000, 2, 2)) to be within the support (PositiveDefinite()) of the distribution Wishart(covariance_matrix: torch.Size([2, 2]), df: 100.0), but found invalid values:
tensor([[[ 1.3125e-32,         nan],
         [        nan,         inf]],

        [[ 2.9602e+20, -3.4070e+12],
         [-3.4070e+12,  3.0561e+12]],

        [[ 0.0000e+00,         nan],
         [        nan,         inf]],

        ...,

        [[ 0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  2.0464e+09]],

        [[ 7.1284e-05, -1.1693e-01],
         [-1.1693e-01,  1.9182e+02]],

        [[ 4.0132e-36,  2.1657e-16],
         [ 2.1657e-16,  1.1687e+04]]], grad_fn=<PermuteBackward0>)
